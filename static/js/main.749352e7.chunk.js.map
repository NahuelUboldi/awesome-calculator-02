{"version":3,"sources":["CalcOne.js","App.js","index.js","CalcTwo.js"],"names":["CalcOne","useState","expression","setExpression","display","setDisplay","answer","setAnswer","handleInput","sym","isExpLastDigitNumber","test","length","isInputNumber","isInputNegativeSign","hasDisplayDecimal","isDisplayNegative","prev","console","log","calculate","isDisplayLastDigitNumber","evaluateExpression","joined","join","result","eval","exp","sliced","slice","clear","className","id","type","onClick","App","CalcTwo","ReactDOM","render","StrictMode","document","getElementById","placeholder","setPlaceholder","formula","setFormula","handleClear","handleCalculate","JSON","stringify","input","isNumber","isZero","isOperator","isNegativeSign","isDecimalSign","hasDisplayNegativeSign","doesFormulaEndsWithOperator"],"mappings":"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","file":"static/js/main.749352e7.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nfunction CalcOne() {\n  const [expression, setExpression] = useState('');\n  const [display, setDisplay] = useState('');\n  const [answer, setAnswer] = useState('');\n\n  const handleInput = (sym) => {\n    let isExpLastDigitNumber = /[0-9.]/.test(expression[expression.length - 1]);\n    let isInputNumber = /[0-9.]/.test(sym);\n    let isInputNegativeSign = /[-]/.test(sym);\n    let hasDisplayDecimal = /[.]/.test(display);\n    let isDisplayNegative = /[-]/.test(display[0]);\n\n    if (\n      isInputNumber ||\n      (isInputNegativeSign &&\n        !isDisplayNegative &&\n        (isExpLastDigitNumber || expression.length === 0))\n    ) {\n      if (\n        (display[0] === '-' && isInputNegativeSign) ||\n        (sym === '.' && hasDisplayDecimal) ||\n        (sym === '0' && display[display.length - 1] === '0')\n      ) {\n        return;\n      } else {\n        setDisplay((prev) => prev + sym);\n      }\n    }\n\n    if (!isInputNumber && display.length > 0) {\n      if (isInputNegativeSign && isDisplayNegative && display.length === 1) {\n        return;\n      }\n\n      setExpression((prev) => prev + display + sym);\n      setDisplay('');\n    }\n    if (!isInputNumber && display.length === 0 && !isExpLastDigitNumber) {\n      console.log(5 + 'acá está el error');\n      // setExpression((prev) => {\n      //   let sliced = prev.slice('0', prev.length - 1);\n      //   return sliced + sym;\n      // });\n      setExpression((prev) => prev);\n    }\n  };\n\n  const calculate = () => {\n    //display could be:\n    // empty -> nothing\n    // number -> calculate\n    // minus -> nothing\n    // decimal -> nothing\n    //expression finish with:\n    // operator -> delete operator and calculate\n    // number -> calculate\n\n    let isExpLastDigitNumber = /[0-9]/.test(expression[expression.length - 1]);\n    let isDisplayLastDigitNumber = /[0-9]/.test(display[display.length - 1]);\n    let isDisplayNegative = /[-]/.test(display[0]);\n\n    if (!isDisplayLastDigitNumber) {\n      return;\n    } else {\n      if (isExpLastDigitNumber) {\n        console.log('isExpLastDigitNumber', expression, display, answer);\n        setExpression((prev) => prev + '=');\n        setAnswer(evaluateExpression(expression));\n      } else {\n        let joined = [expression, display].join('');\n        setExpression((prev) => prev + display + '=');\n        let result = eval(joined);\n        setAnswer(result);\n        setDisplay('');\n        setExpression(result);\n      }\n    }\n  };\n\n  const evaluateExpression = (exp) => {\n    let sliced = exp.slice('0', exp.length - 1);\n    return eval(sliced);\n  };\n\n  const clear = () => {\n    setExpression('');\n    setAnswer(0);\n    setDisplay('');\n  };\n\n  return (\n    <div className='CalcOne'>\n      <div className='container'>\n        <h1 className='h1 mb-5'>Awesome calculator 2</h1>\n        <div className='grid pb-5'>\n          <div className='display alert alert-dismissible alert-primary'>\n            <div className='expression fs-4 text-warning'>\n              expression: {expression}\n            </div>\n            <div id='display' className='fs-4 text-'>\n              {display || answer}\n            </div>\n          </div>\n          <button\n            type='button'\n            onClick={() => clear()}\n            className='btn btn-secondary clear'\n            id='clear'\n          >\n            AC\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('/')}\n            className='btn btn-outline-info divide'\n            id='divide'\n          >\n            /\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('*')}\n            className='btn btn-outline-info multiply'\n            id='multiply'\n          >\n            x\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('7')}\n            className='btn btn-outline-primary seven'\n            id='seven'\n          >\n            7\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('8')}\n            className='btn btn-outline-primary eight'\n            id='eight'\n          >\n            8\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('9')}\n            className='btn btn-outline-primary nine'\n            id='nine'\n          >\n            9\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('-')}\n            className='btn btn-outline-info subtract'\n            id='subtract'\n          >\n            -\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('4')}\n            className='btn btn-outline-primary four'\n            id='four'\n          >\n            4\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('5')}\n            className='btn btn-outline-primary five'\n            id='five'\n          >\n            5\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('6')}\n            className='btn btn-outline-primary six'\n            id='six'\n          >\n            6\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('+')}\n            className='btn btn-outline-info six'\n            id='add'\n          >\n            +\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('1')}\n            className='btn btn-outline-primary one'\n            id='one'\n          >\n            1\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('2')}\n            className='btn btn-outline-primary two'\n            id='two'\n          >\n            2\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('3')}\n            className='btn btn-outline-primary three'\n            id='three'\n          >\n            3\n          </button>\n          <button\n            type='button'\n            onClick={() => calculate()}\n            className='btn btn-info equals'\n            id='equals'\n          >\n            =\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('0')}\n            className='btn btn-outline-primary zero'\n            id='zero'\n          >\n            0\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('.')}\n            className='btn btn-outline-primary decimal'\n            id='decimal'\n          >\n            .\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CalcOne;\n","import React from 'react';\nimport CalcOne from './CalcOne';\nimport CalcTwo from './CalcTwo';\n\nfunction App() {\n  return (\n    <>\n\n      <CalcTwo />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","import './App.css';\nimport { useState } from 'react';\n\nfunction CalcTwo() {\n  const [placeholder, setPlaceholder] = useState(\"0\")\n  const [display, setDisplay] = useState(\"\")\n  const [formula, setFormula] = useState(\"\")\n\n  const handleClear = () => {\n    setPlaceholder(\"0\")\n    setDisplay(\"\")\n    setFormula(\"\")\n  };\n  const handleCalculate = () => {\n   let result = eval(formula + display)\n   setDisplay(JSON.stringify(result));\n   setFormula(\"\")\n  };\n  const handleInput = (input) => {\n    const isNumber = /[0-9]/.test(input);\n    const isZero = /0/.test(input);\n    const isOperator = /[^0-9.]/.test(input);\n    const isNegativeSign = /-/.test(input);\n    const isDecimalSign = /[.]/.test(input);\n\n    const hasDisplayNegativeSign = /[-]/.test(display)\n    const hasDisplayDecimal = /[.]/.test(display);\n\n    const doesFormulaEndsWithOperator = /[^0-9.]$/.test(formula);\n    setPlaceholder(input)\n\n    if (isDecimalSign && hasDisplayDecimal) {\n      return\n    }\n    \n    if (isZero && (display.length >= 1 && !hasDisplayNegativeSign)) {\n      setDisplay((prev) => prev + input);\n      return\n    }\n\n    if (display.length === 0) {\n      if (isZero) return\n      if (isOperator && !doesFormulaEndsWithOperator) {\n        if (isNegativeSign && display.length === 0) {\n          setDisplay(prev => prev + input)\n          return\n        }\n        return\n      }\n      if ((isOperator && !isNegativeSign) && doesFormulaEndsWithOperator) {\n        let sliced = formula.slice('0', formula.length - 1);\n        setFormula(prev => sliced + input)\n        return\n      }\n    }\n\n    if (isDecimalSign && (display.length === 0 || (display.length === 1 && hasDisplayNegativeSign))) {\n      setDisplay((prev) => prev + '0.');\n      return\n    }\n    if (isNegativeSign && display.length === 0) {\n      setDisplay(prev => prev + input)\n      return\n    }\n    if (isNumber || isZero || isDecimalSign) {\n       setDisplay((prev) => prev + input)\n      return\n    }\n    if (isOperator && display.length >= 1) {\n      if (display.length === 1 && hasDisplayNegativeSign) {\n        if(doesFormulaEndsWithOperator) {\n          let sliced = formula.slice('0', formula.length - 1);\n          setFormula((prev) => sliced + input);\n          setDisplay(\"\")\n          return\n        }\n        setDisplay(input)\n        return\n      }\n      setFormula(prev => prev + display + input)\n      setDisplay (\"\")\n      return\n    }\n  };\n\n  return (\n    <div className='CalcTwo'>\n      <div className='container'>\n        <h1 className='h1 mb-5'>Awesome calculator 2</h1>\n        <div className='grid pb-5'>\n          <div className='display alert alert-dismissible alert-primary'>\n            <div className='expression fs-4 text-warning'>{formula}</div>\n            <div id='display' className='fs-4 text-'>{display || placeholder}</div>\n          </div>\n          <button\n            type='button'\n            onClick={() => handleClear()}\n            className='btn btn-secondary clear'\n            id='clear'\n          >\n            AC\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('/')}\n            className='btn btn-outline-info divide'\n            id='divide'\n          >\n            /\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('*')}\n            className='btn btn-outline-info multiply'\n            id='multiply'\n          >\n            x\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('7')}\n            className='btn btn-outline-primary seven'\n            id='seven'\n          >\n            7\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('8')}\n            className='btn btn-outline-primary eight'\n            id='eight'\n          >\n            8\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('9')}\n            className='btn btn-outline-primary nine'\n            id='nine'\n          >\n            9\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('-')}\n            className='btn btn-outline-info subtract'\n            id='subtract'\n          >\n            -\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('4')}\n            className='btn btn-outline-primary four'\n            id='four'\n          >\n            4\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('5')}\n            className='btn btn-outline-primary five'\n            id='five'\n          >\n            5\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('6')}\n            className='btn btn-outline-primary six'\n            id='six'\n          >\n            6\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('+')}\n            className='btn btn-outline-info six'\n            id='add'\n          >\n            +\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('1')}\n            className='btn btn-outline-primary one'\n            id='one'\n          >\n            1\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('2')}\n            className='btn btn-outline-primary two'\n            id='two'\n          >\n            2\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('3')}\n            className='btn btn-outline-primary three'\n            id='three'\n          >\n            3\n          </button>\n          <button\n            type='button'\n            onClick={() => handleCalculate()}\n            className='btn btn-info equals'\n            id='equals'\n          >\n            =\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('0')}\n            className='btn btn-outline-primary zero'\n            id='zero'\n          >\n            0\n          </button>\n          <button\n            type='button'\n            onClick={() => handleInput('.')}\n            className='btn btn-outline-primary decimal'\n            id='decimal'\n          >\n            .\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CalcTwo;\n"],"sourceRoot":""}